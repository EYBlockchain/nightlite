jobs:
- job: Job1
  pool:
    vmImage: 'vs2017-win2016'

  steps:
  - script: >
      npx -p semantic-release
      -p @semantic-release/git
      -p semantic-release-ado
      semantic-release
    env: { GH_TOKEN: $(GitHubToken) }
    displayName: 'Semantic release'

  - powershell: |
      echo "##vso[task.setvariable variable=versionNumber;isOutput=true]$(nextRelease)"
    name: setOutputVar

- job: Job2
  dependsOn: Job1
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    matrix:
      node_12_x:
        node_version: 12.x
  variables:
    versionNumber: $[ dependencies.Job1.outputs['setOutputVar.versionNumber'] ]
    dockerId: eyblockchainregistry
    imageName: nightfall-sdk-api

  steps:
  - script: |
      docker build -t $(dockerId).azurecr.io/$(imageName):v$(versionNumber) .
      docker login -u $(dockerId) -p $(acrPassword) $(dockerId).azurecr.io
      docker push $(dockerId).azurecr.io/$(imageName):v$(versionNumber)
    env: { acrPassword: $(pswd) }
    displayName: 'Push Image'
