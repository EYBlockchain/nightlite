{
  "contractName": "NFTokenMetadata",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_approved",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_operator",
          "type": "address"
        },
        {
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "_name",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "_symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x77097fc8"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42966c68"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b50600060208181527f67be87c3ff9960ca1e9cfac5cab2ff4747269cf9ed20c9b7306235ac35a491c58054600160ff1991821681179092557f80ac58cd000000000000000000000000000000000000000000000000000000009093527ff7815fccbf112960a73756e185887fedcb9fc64ca0a16cc5923b7960ed7808008054909316179091556040805180820190915260078082527f4559546f6b656e0000000000000000000000000000000000000000000000000091909201908152620000dd916005919062000180565b506040805180820190915260038082527f45595400000000000000000000000000000000000000000000000000000000006020909201918252620001249160069162000180565b507f5b5e139f0000000000000000000000000000000000000000000000000000000060009081526020527f9562381dfbc2d8b8b66e765249f330164b73e329e5f01670660643571d1974df805460ff1916600117905562000225565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10620001c357805160ff1916838001178555620001f3565b82800160010185558215620001f3579182015b82811115620001f3578251825591602001919060010190620001d6565b506200020192915062000205565b5090565b6200022291905b808211156200020157600081556001016200020c565b90565b61107080620002356000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610376578063b88d4fde146103a4578063c87b56dd14610434578063e985e9c514610451576100f5565b80636352211e146102a257806370a08231146102bf57806377097fc8146102f757806395d89b411461036e576100f5565b8063095ea7b3116100d3578063095ea7b3146101eb57806323b872dd1461021957806342842e0e1461024f57806342966c6814610285576100f5565b806301ffc9a7146100fa57806306fdde0314610135578063081812fc146101b2575b600080fd5b6101216004803603602081101561011057600080fd5b50356001600160e01b03191661047f565b604080519115158252519081900360200190f35b61013d6104a2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017757818101518382015260200161015f565b50505050905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360208110156101c857600080fd5b5035610538565b604080516001600160a01b039092168252519081900360200190f35b6102176004803603604081101561020157600080fd5b506001600160a01b038135169060200135610578565b005b6102176004803603606081101561022f57600080fd5b506001600160a01b03813581169160208101359091169060400135610677565b6102176004803603606081101561026557600080fd5b506001600160a01b0381358116916020810135909116906040013561075d565b6102176004803603602081101561029b57600080fd5b503561077d565b6101cf600480360360208110156102b857600080fd5b50356107ac565b6102e5600480360360208110156102d557600080fd5b50356001600160a01b03166107ce565b60408051918252519081900360200190f35b6102176004803603604081101561030d57600080fd5b8135919081019060408101602082013564010000000081111561032f57600080fd5b82018360208201111561034157600080fd5b8035906020019184600183028401116401000000008311171561036357600080fd5b5090925090506107f2565b61013d610821565b6102176004803603604081101561038c57600080fd5b506001600160a01b0381351690602001351515610882565b610217600480360360808110156103ba57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103f557600080fd5b82018360208201111561040757600080fd5b8035906020019184600183028401116401000000008311171561042957600080fd5b5090925090506108f0565b61013d6004803603602081101561044a57600080fd5b5035610939565b6101216004803603604081101561046757600080fd5b506001600160a01b03813581169160200135166109ff565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b60008181526001602052604081205482906001600160a01b031661055b57600080fd5b50506000908152600260205260409020546001600160a01b031690565b60008181526001602052604090205481906001600160a01b0316338114806105c357506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6105cc57600080fd5b60008381526001602052604090205483906001600160a01b03166105ef57600080fd5b6000848152600160205260409020546001600160a01b0390811690861681141561061857600080fd5b60008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b0316338114806106b557506000828152600260205260409020546001600160a01b031633145b806106e357506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6106ec57600080fd5b60008381526001602052604090205483906001600160a01b031661070f57600080fd5b6000848152600160205260409020546001600160a01b03908116908716811461073757600080fd5b6001600160a01b03861661074a57600080fd5b6107548686610a2d565b50505050505050565b61077883838360405180602001604052806000815250610aa8565b505050565b6000818152600160205260409020546001600160a01b031633146107a057600080fd5b6107a981610cc2565b50565b6000818152600160205260409020546001600160a01b03168061049d57600080fd5b60006001600160a01b0382166107e357600080fd5b6107ec82610d09565b92915050565b6107fc3384610d24565b801561077857600083815260076020526040902061081b908383610f69565b50505050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561052e5780601f106105035761010080835404028352916020019161052e565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b61093285858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610aa892505050565b5050505050565b60008181526001602052604090205460609082906001600160a01b031661095f57600080fd5b60008381526007602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156109f25780601f106109c7576101008083540402835291602001916109f2565b820191906000526020600020905b8154815290600101906020018083116109d557829003601f168201915b5050505050915050919050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000818152600160205260409020546001600160a01b0316610a4e82610d9f565b610a588183610dda565b610a628383610e3c565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b031633811480610ae657506000828152600260205260409020546001600160a01b031633145b80610b1457506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b610b1d57600080fd5b60008481526001602052604090205484906001600160a01b0316610b4057600080fd5b6000858152600160205260409020546001600160a01b039081169088168114610b6857600080fd5b6001600160a01b038716610b7b57600080fd5b610b858787610a2d565b610b97876001600160a01b0316610ebf565b15610cb857604051600160e11b630a85bd0102815233600482018181526001600160a01b038b81166024850152604484018a9052608060648501908152895160848601528951600095928d169463150b7a029490938f938e938e939260a4019060208501908083838e5b83811015610c19578181015183820152602001610c01565b50505050905090810190601f168015610c465780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610c6857600080fd5b505af1158015610c7c573d6000803e3d6000fd5b505050506040513d6020811015610c9257600080fd5b505190506001600160e01b03198116600160e11b630a85bd010214610cb657600080fd5b505b5050505050505050565b610ccb81610ec5565b60008181526007602052604090205460026000196101006001841615020190911604156107a95760008181526007602052604081206107a991610fe7565b6001600160a01b031660009081526003602052604090205490565b6001600160a01b038216610d3757600080fd5b6000818152600160205260409020546001600160a01b031615610d5957600080fd5b610d638282610e3c565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600260205260409020546001600160a01b0316156107a957600090815260026020526040902080546001600160a01b0319169055565b6000818152600160205260409020546001600160a01b03838116911614610e0057600080fd5b6001600160a01b0390911660009081526003602090815260408083208054600019019055928252600190522080546001600160a01b0319169055565b6000818152600160205260409020546001600160a01b031615610e5e57600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558452600390915290912054610e9f91610f50565b6001600160a01b0390921660009081526003602052604090209190915550565b3b151590565b60008181526001602052604090205481906001600160a01b0316610ee857600080fd5b6000828152600160205260409020546001600160a01b0316610f0983610d9f565b610f138184610dda565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b600082820183811015610f6257600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610faa5782800160ff19823516178555610fd7565b82800160010185558215610fd7579182015b82811115610fd7578235825591602001919060010190610fbc565b50610fe3929150611027565b5090565b50805460018160011615610100020316600290046000825580601f1061100d57506107a9565b601f0160209004906000526020600020908101906107a991905b61104191905b80821115610fe3576000815560010161102d565b9056fea165627a7a7230582031c720c3f97ba079aba6eea054004e07a188d6044a284fab491c1f046647eefc0029",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c80636352211e11610097578063a22cb46511610066578063a22cb46514610376578063b88d4fde146103a4578063c87b56dd14610434578063e985e9c514610451576100f5565b80636352211e146102a257806370a08231146102bf57806377097fc8146102f757806395d89b411461036e576100f5565b8063095ea7b3116100d3578063095ea7b3146101eb57806323b872dd1461021957806342842e0e1461024f57806342966c6814610285576100f5565b806301ffc9a7146100fa57806306fdde0314610135578063081812fc146101b2575b600080fd5b6101216004803603602081101561011057600080fd5b50356001600160e01b03191661047f565b604080519115158252519081900360200190f35b61013d6104a2565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561017757818101518382015260200161015f565b50505050905090810190601f1680156101a45780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101cf600480360360208110156101c857600080fd5b5035610538565b604080516001600160a01b039092168252519081900360200190f35b6102176004803603604081101561020157600080fd5b506001600160a01b038135169060200135610578565b005b6102176004803603606081101561022f57600080fd5b506001600160a01b03813581169160208101359091169060400135610677565b6102176004803603606081101561026557600080fd5b506001600160a01b0381358116916020810135909116906040013561075d565b6102176004803603602081101561029b57600080fd5b503561077d565b6101cf600480360360208110156102b857600080fd5b50356107ac565b6102e5600480360360208110156102d557600080fd5b50356001600160a01b03166107ce565b60408051918252519081900360200190f35b6102176004803603604081101561030d57600080fd5b8135919081019060408101602082013564010000000081111561032f57600080fd5b82018360208201111561034157600080fd5b8035906020019184600183028401116401000000008311171561036357600080fd5b5090925090506107f2565b61013d610821565b6102176004803603604081101561038c57600080fd5b506001600160a01b0381351690602001351515610882565b610217600480360360808110156103ba57600080fd5b6001600160a01b038235811692602081013590911691604082013591908101906080810160608201356401000000008111156103f557600080fd5b82018360208201111561040757600080fd5b8035906020019184600183028401116401000000008311171561042957600080fd5b5090925090506108f0565b61013d6004803603602081101561044a57600080fd5b5035610939565b6101216004803603604081101561046757600080fd5b506001600160a01b03813581169160200135166109ff565b6001600160e01b0319811660009081526020819052604090205460ff165b919050565b60058054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561052e5780601f106105035761010080835404028352916020019161052e565b820191906000526020600020905b81548152906001019060200180831161051157829003601f168201915b5050505050905090565b60008181526001602052604081205482906001600160a01b031661055b57600080fd5b50506000908152600260205260409020546001600160a01b031690565b60008181526001602052604090205481906001600160a01b0316338114806105c357506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6105cc57600080fd5b60008381526001602052604090205483906001600160a01b03166105ef57600080fd5b6000848152600160205260409020546001600160a01b0390811690861681141561061857600080fd5b60008581526002602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050505050565b60008181526001602052604090205481906001600160a01b0316338114806106b557506000828152600260205260409020546001600160a01b031633145b806106e357506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b6106ec57600080fd5b60008381526001602052604090205483906001600160a01b031661070f57600080fd5b6000848152600160205260409020546001600160a01b03908116908716811461073757600080fd5b6001600160a01b03861661074a57600080fd5b6107548686610a2d565b50505050505050565b61077883838360405180602001604052806000815250610aa8565b505050565b6000818152600160205260409020546001600160a01b031633146107a057600080fd5b6107a981610cc2565b50565b6000818152600160205260409020546001600160a01b03168061049d57600080fd5b60006001600160a01b0382166107e357600080fd5b6107ec82610d09565b92915050565b6107fc3384610d24565b801561077857600083815260076020526040902061081b908383610f69565b50505050565b60068054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561052e5780601f106105035761010080835404028352916020019161052e565b3360008181526004602090815260408083206001600160a01b03871680855290835292819020805460ff1916861515908117909155815190815290519293927f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31929181900390910190a35050565b61093285858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610aa892505050565b5050505050565b60008181526001602052604090205460609082906001600160a01b031661095f57600080fd5b60008381526007602090815260409182902080548351601f6002600019610100600186161502019093169290920491820184900484028101840190945280845290918301828280156109f25780601f106109c7576101008083540402835291602001916109f2565b820191906000526020600020905b8154815290600101906020018083116109d557829003601f168201915b5050505050915050919050565b6001600160a01b03918216600090815260046020908152604080832093909416825291909152205460ff1690565b6000818152600160205260409020546001600160a01b0316610a4e82610d9f565b610a588183610dda565b610a628383610e3c565b81836001600160a01b0316826001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b60008281526001602052604090205482906001600160a01b031633811480610ae657506000828152600260205260409020546001600160a01b031633145b80610b1457506001600160a01b038116600090815260046020908152604080832033845290915290205460ff165b610b1d57600080fd5b60008481526001602052604090205484906001600160a01b0316610b4057600080fd5b6000858152600160205260409020546001600160a01b039081169088168114610b6857600080fd5b6001600160a01b038716610b7b57600080fd5b610b858787610a2d565b610b97876001600160a01b0316610ebf565b15610cb857604051600160e11b630a85bd0102815233600482018181526001600160a01b038b81166024850152604484018a9052608060648501908152895160848601528951600095928d169463150b7a029490938f938e938e939260a4019060208501908083838e5b83811015610c19578181015183820152602001610c01565b50505050905090810190601f168015610c465780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015610c6857600080fd5b505af1158015610c7c573d6000803e3d6000fd5b505050506040513d6020811015610c9257600080fd5b505190506001600160e01b03198116600160e11b630a85bd010214610cb657600080fd5b505b5050505050505050565b610ccb81610ec5565b60008181526007602052604090205460026000196101006001841615020190911604156107a95760008181526007602052604081206107a991610fe7565b6001600160a01b031660009081526003602052604090205490565b6001600160a01b038216610d3757600080fd5b6000818152600160205260409020546001600160a01b031615610d5957600080fd5b610d638282610e3c565b60405181906001600160a01b038416906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6000818152600260205260409020546001600160a01b0316156107a957600090815260026020526040902080546001600160a01b0319169055565b6000818152600160205260409020546001600160a01b03838116911614610e0057600080fd5b6001600160a01b0390911660009081526003602090815260408083208054600019019055928252600190522080546001600160a01b0319169055565b6000818152600160205260409020546001600160a01b031615610e5e57600080fd5b600081815260016020818152604080842080546001600160a01b0319166001600160a01b0388169081179091558452600390915290912054610e9f91610f50565b6001600160a01b0390921660009081526003602052604090209190915550565b3b151590565b60008181526001602052604090205481906001600160a01b0316610ee857600080fd5b6000828152600160205260409020546001600160a01b0316610f0983610d9f565b610f138184610dda565b60405183906000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505050565b600082820183811015610f6257600080fd5b9392505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610faa5782800160ff19823516178555610fd7565b82800160010185558215610fd7579182015b82811115610fd7578235825591602001919060010190610fbc565b50610fe3929150611027565b5090565b50805460018160011615610100020316600290046000825580601f1061100d57506107a9565b601f0160209004906000526020600020908101906107a991905b61104191905b80821115610fe3576000815560010161102d565b9056fea165627a7a7230582031c720c3f97ba079aba6eea054004e07a188d6044a284fab491c1f046647eefc0029",
  "sourceMap": "1270:3313:12:-;;;1752:141;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;420:19:18;:31;;;;;:38;;454:4;-1:-1:-1;;420:38:18;;;;;;;;5179:31:11;;;;;:38;;;;;;;;;420:31:18;1785:19:12;;;;;;;;;;;;;;;;;;;;;;:7;;:19;;:::i;:::-;-1:-1:-1;1810:16:12;;;;;;;;;;;;;;;;;;;;;;;:9;;:16;:::i;:::-;-1:-1:-1;1832:31:12;:19;:31;;;;;;:38;;-1:-1:-1;;1832:38:12;1866:4;1832:38;;;1270:3313;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1270:3313:12;;;-1:-1:-1;1270:3313:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1270:3313:12:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1270:3313:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;676:150:18;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;676:150:18;-1:-1:-1;;;;;;676:150:18;;:::i;:::-;;;;;;;;;;;;;;;;;;2008:100:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8::-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2008:100:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10505:160:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10505:160:11;;:::i;:::-;;;;-1:-1:-1;;;;;10505:160:11;;;;;;;;;;;;;;8468:315;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;8468:315:11;;;;;;;;:::i;:::-;;7756:300;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7756:300:11;;;;;;;;;;;;;;;;;:::i;7033:157::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;7033:157:11;;;;;;;;;;;;;;;;;:::i;3344:129:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3344:129:12;;:::i;10099:170:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;10099:170:11;;:::i;9681:167::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;9681:167:11;-1:-1:-1;;;;;9681:167:11;;:::i;:::-;;;;;;;;;;;;;;;;2872:202:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2872:202:12;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;2872:202:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2872:202:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;2872:202:12;;-1:-1:-1;2872:202:12;-1:-1:-1;2872:202:12;:::i;2210:108::-;;;:::i;9185:210:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9185:210:11;;;;;;;;;;:::i;6448:186::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;6448:186:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;6448:186:11;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6448:186:11;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;-1:-1;6448:186:11;;-1:-1:-1;6448:186:11;-1:-1:-1;6448:186:11;:::i;2464:158:12:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2464:158:12;;:::i;10926:169:11:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;10926:169:11;;;;;;;;;;:::i;676:150:18:-;-1:-1:-1;;;;;;788:33:18;;767:4;788:33;;;;;;;;;;;;;676:150;;;;:::o;2008:100:12:-;2096:7;2088:15;;;;;;;;-1:-1:-1;;2088:15:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2059:19;;2088:15;;2096:7;;2088:15;;2096:7;2088:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:100;:::o;10505:160:11:-;10614:7;5052:19;;;:9;:19;;;;;;10591:8;;-1:-1:-1;;;;;5052:19:11;5044:42;;;;;;-1:-1:-1;;10638:22:11;;;;:12;:22;;;;;;-1:-1:-1;;;;;10638:22:11;;10505:160::o;8468:315::-;4349:18;4370:19;;;:9;:19;;;;;;8562:8;;-1:-1:-1;;;;;4370:19:11;4417:10;4403:24;;;:68;;-1:-1:-1;;;;;;4431:28:11;;;;;;:16;:28;;;;;;;;4460:10;4431:40;;;;;;;;;;4403:68;4395:77;;;;;;5083:1;5052:19;;;:9;:19;;;;;;8589:8;;-1:-1:-1;;;;;5052:19:11;5044:42;;;;;;8607:18;8628:19;;;:9;:19;;;;;;-1:-1:-1;;;;;8628:19:11;;;;8661:23;;;;;8653:32;;;;;;8692:22;;;;:12;:22;;;;;;:34;;-1:-1:-1;;;;;;8692:34:11;-1:-1:-1;;;;;8692:34:11;;;;;;;;;8737:41;;8692:22;;8737:41;;;;;;;5092:1;4478;8468:315;;;;:::o;7756:300::-;4672:18;4693:19;;;:9;:19;;;;;;7869:8;;-1:-1:-1;;;;;4693:19:11;4747:10;4733:24;;;:70;;-1:-1:-1;4767:22:11;;;;:12;:22;;;;;;-1:-1:-1;;;;;4767:22:11;4793:10;4767:36;4733:70;:120;;;-1:-1:-1;;;;;;4813:28:11;;;;;;:16;:28;;;;;;;;4842:10;4813:40;;;;;;;;;;4733:120;4718:141;;;;;;5083:1;5052:19;;;:9;:19;;;;;;7896:8;;-1:-1:-1;;;;;5052:19:11;5044:42;;;;;;7914:18;7935:19;;;:9;:19;;;;;;-1:-1:-1;;;;;7935:19:11;;;;7968;;;;7960:28;;;;;;-1:-1:-1;;;;;8002:17:11;;7994:26;;;;;;8027:24;8037:3;8042:8;8027:9;:24::i;:::-;5092:1;4865;7756:300;;;;;:::o;7033:157::-;7142:43;7160:5;7167:3;7172:8;7142:43;;;;;;;;;;;;:17;:43::i;:::-;7033:157;;;:::o;3344:129:12:-;3427:19;;;;:9;:19;;;;;;-1:-1:-1;;;;;3427:19:12;3413:10;:33;3405:42;;;;;;3453:15;3459:8;3453:5;:15::i;:::-;3344:129;:::o;10099:170:11:-;10177:14;10210:19;;;:9;:19;;;;;;-1:-1:-1;;;;;10210:19:11;10243:20;10235:29;;;;;9681:167;9759:7;-1:-1:-1;;;;;9784:20:11;;9776:29;;;;;;9818:25;9836:6;9818:17;:25::i;:::-;9811:32;9681:167;-1:-1:-1;;9681:167:11:o;2872:202:12:-;2959:33;2971:10;2983:8;2959:11;:33::i;:::-;3002:23;;2998:72;;3039:17;;;;:7;:17;;;;;:24;;3059:4;;3039:24;:::i;:::-;;2872:202;;;:::o;2210:108::-;2304:9;2294:19;;;;;;;;-1:-1:-1;;2294:19:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2263:21;;2294:19;;2304:9;;2294:19;;2304:9;2294:19;;;;;;;;;;;;;;;;;;;;;;;;9185:210:11;9297:10;9280:28;;;;:16;:28;;;;;;;;-1:-1:-1;;;;;9280:39:11;;;;;;;;;;;;:51;;-1:-1:-1;;9280:51:11;;;;;;;;;;9342:48;;;;;;;9280:39;;9297:10;9342:48;;;;;;;;;;;9185:210;;:::o;6448:186::-;6583:46;6601:5;6608:3;6613:8;6623:5;;6583:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;6583:17:11;;-1:-1:-1;;;6583:46:11:i;:::-;6448:186;;;;;:::o;2464:158:12:-;5083:1:11;5052:19;;;:9;:19;;;;;;2570:13:12;;2547:8;;-1:-1:-1;;;;;5052:19:11;5044:42;;;;;;2600:17:12;;;;:7;:17;;;;;;;;;2593:24;;;;;;-1:-1:-1;;2593:24:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2600:17;;2593:24;;2600:17;2593:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2464:158;;;;:::o;10926:169:11:-;-1:-1:-1;;;;;11055:24:11;;;11034:4;11055:24;;;:16;:24;;;;;;;;:35;;;;;;;;;;;;;;;10926:169::o;11278:262::-;11361:12;11376:19;;;:9;:19;;;;;;-1:-1:-1;;;;;11376:19:11;11401:24;11386:8;11401:14;:24::i;:::-;11432:30;11447:4;11453:8;11432:14;:30::i;:::-;11468:26;11480:3;11485:8;11468:11;:26::i;:::-;11526:8;11521:3;-1:-1:-1;;;;;11506:29:11;11515:4;-1:-1:-1;;;;;11506:29:11;;;;;;;;;;;11278:262;;;:::o;14491:519::-;4672:18;4693:19;;;:9;:19;;;;;;14632:8;;-1:-1:-1;;;;;4693:19:11;4747:10;4733:24;;;:70;;-1:-1:-1;4767:22:11;;;;:12;:22;;;;;;-1:-1:-1;;;;;4767:22:11;4793:10;4767:36;4733:70;:120;;;-1:-1:-1;;;;;;4813:28:11;;;;;;:16;:28;;;;;;;;4842:10;4813:40;;;;;;;;;;4733:120;4718:141;;;;;;5083:1;5052:19;;;:9;:19;;;;;;14659:8;;-1:-1:-1;;;;;5052:19:11;5044:42;;;;;;14677:18;14698:19;;;:9;:19;;;;;;-1:-1:-1;;;;;14698:19:11;;;;14731;;;;14723:28;;;;;;-1:-1:-1;;;;;14765:17:11;;14757:26;;;;;;14790:24;14800:3;14805:8;14790:9;:24::i;:::-;14825:16;:3;-1:-1:-1;;;;;14825:14:11;;:16::i;:::-;14821:185;;;14871:77;;-1:-1:-1;;;;;14871:77:11;;14913:10;14871:77;;;;;;-1:-1:-1;;;;;14871:77:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;14855:13;;14871:41;;;;;;14913:10;;14925:5;;14932:8;;14942:5;;14871:77;;;;;;;;;;;14855:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;14871:77:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14871:77:11;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14871:77:11;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14871:77:11;;-1:-1:-1;;;;;;;14964:34:11;;-1:-1:-1;;;;;14964:34:11;14956:43;;;;;;14821:185;;5092:1;4865;14491:519;;;;;;:::o;3867:179:12:-;3929:21;3941:8;3929:11;:21::i;:::-;3967:17;;;;:7;:17;;;;;3961:31;;-1:-1:-1;;3961:31:12;;;;;;;;;;;:36;3957:85;;4018:17;;;;:7;:17;;;;;4011:24;;;:::i;14080:142:11:-;-1:-1:-1;;;;;14190:27:11;14166:7;14190:27;;;:19;:27;;;;;;;14080:142::o;11921:238::-;-1:-1:-1;;;;;12008:17:11;;12000:26;;;;;;12071:1;12040:19;;;:9;:19;;;;;;-1:-1:-1;;;;;12040:19:11;:33;12032:42;;;;;;12081:26;12093:3;12098:8;12081:11;:26::i;:::-;12119:35;;12145:8;;-1:-1:-1;;;;;12119:35:11;;;12136:1;;12119:35;;12136:1;;12119:35;11921:238;;:::o;15137:164::-;15245:1;15211:22;;;:12;:22;;;;;;-1:-1:-1;;;;;15211:22:11;:36;15207:90;;15268:22;;;;:12;:22;;;;;15261:29;;-1:-1:-1;;;;;;15261:29:11;;;15137:164::o;13077:229::-;13175:19;;;;:9;:19;;;;;;-1:-1:-1;;;;;13175:28:11;;;:19;;:28;13167:37;;;;;;-1:-1:-1;;;;;13239:26:11;;;;;;;:19;:26;;;;;;;;;;-1:-1:-1;;13239:30:11;13210:59;;13282:19;;;13268:1;13282:19;;;13275:26;;-1:-1:-1;;;;;;13275:26:11;;;13077:229::o;13565:228::-;13689:1;13658:19;;;:9;:19;;;;;;-1:-1:-1;;;;;13658:19:11;:33;13650:42;;;;;;13699:19;;;;:9;:19;;;;;;;;:25;;-1:-1:-1;;;;;;13699:25:11;-1:-1:-1;;;;;13699:25:11;;;;;;;;13757:24;;:19;:24;;;;;;;:31;;:28;:31::i;:::-;-1:-1:-1;;;;;13730:24:11;;;;;;;:19;:24;;;;;:58;;;;-1:-1:-1;13565:228:11:o;280:596:0:-;799:18;863:8;;;280:596::o;12552:259:11:-;5083:1;5052:19;;;:9;:19;;;;;;12623:8;;-1:-1:-1;;;;;5052:19:11;5044:42;;;;;;12641:18;12662:19;;;:9;:19;;;;;;-1:-1:-1;;;;;12662:19:11;12687:24;12672:8;12687:14;:24::i;:::-;12717:36;12732:10;12744:8;12717:14;:36::i;:::-;12764:42;;12797:8;;12793:1;;-1:-1:-1;;;;;12764:42:11;;;;;12793:1;;12764:42;5092:1;12552:259;;:::o;1271:131:17:-;1329:7;1356:5;;;1375:6;;;;1367:15;;;;;;1396:1;1271:131;-1:-1:-1;;;1271:131:17:o;1270:3313:12:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1270:3313:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1270:3313:12;;;-1:-1:-1;1270:3313:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity 0.5.8;\n\nimport \"./NFToken.sol\";\nimport \"./ERC721Metadata.sol\";\n\n/**\n * @dev Optional metadata implementation for ERC-721 non-fungible token standard.\n The MIT License\n\nCopyright (c) 2017-2018 0xcert, d.o.o. https://0xcert.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n */\ncontract NFTokenMetadata is\n  NFToken,\n  ERC721Metadata\n{\n\n  /**\n   * @dev A descriptive name for a collection of NFTs.\n   */\n  string internal nftName;\n\n  /**\n   * @dev An abbreviated name for NFTokens.\n   */\n  string internal nftSymbol;\n\n  /**\n   * @dev Mapping from NFT ID to metadata uri.\n   */\n  mapping (uint256 => string) internal idToUri;\n\n  /**\n   * @dev Contract constructor.\n   * @notice When implementing this contract don't forget to set nftName and nftSymbol.\n   */\n  constructor()\n    public\n  {\n    nftName = \"EYToken\";\n    nftSymbol= \"EYT\";\n    supportedInterfaces[0x5b5e139f] = true; // ERC721Metadata\n  }\n\n  /**\n   * @dev Returns a descriptive name for a collection of NFTokens.\n   * @return Representing name.\n   */\n  function name()\n    external\n    view\n    returns (string memory _name)\n  {\n    _name = nftName;\n  }\n\n  /**\n   * @dev Returns an abbreviated name for NFTokens.\n   * @return Representing symbol.\n   */\n  function symbol()\n    external\n    view\n    returns (string memory _symbol)\n  {\n    _symbol = nftSymbol;\n  }\n\n  /**\n   * @dev A distinct URI (RFC 3986) for a given NFT.\n   * @param _tokenId Id for which we want uri.\n   * @return URI of _tokenId.\n   */\n  function tokenURI(\n    uint256 _tokenId\n  )\n    external\n    view\n    validNFToken(_tokenId)\n    returns (string memory)\n  {\n    return idToUri[_tokenId];\n  }\n\n  /**\n   * added by Chaitanya-Konda\n   * @dev Mints a new NFT.\n   * @notice This function calls the internal _mint function.\n   * @param _tokenId of the NFT to be minted by the msg.sender.\n   * @param _uri String representing RFC 3986 URI.\n   */\n  function mint(\n    uint256 _tokenId,\n    string calldata _uri\n  )\n    external\n  {\n    super._mint(msg.sender, _tokenId);\n    if (bytes(_uri).length != 0)\n    {\n      idToUri[_tokenId] = _uri;\n    }\n  }\n\n   /**\n   * added by Chaitanya-Konda\n   * @dev Burns a NFT.\n   * @notice This function calls the internal _burn function. Also, note that this burn implementation allows the minter to re-mint a burned\n   * NFT.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n  function burn(\n    uint256 _tokenId\n  )\n    external\n  {\n    require(msg.sender == idToOwner[_tokenId]);\n    _burn(_tokenId);\n  }\n\n\n  /**\n   * @dev Burns a NFT.\n   * @notice This is an internal function which should be called from user-implemented external\n   * burn function. Its purpose is to show and properly initialize data structures when using this\n   * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n   * NFT.\n   * @param _tokenId ID of the NFT to be burned.\n   */\n  function _burn(\n    uint256 _tokenId\n  )\n    internal\n  {\n    super._burn(_tokenId);\n\n    if (bytes(idToUri[_tokenId]).length != 0)\n    {\n      delete idToUri[_tokenId];\n    }\n  }\n\n  /**\n   * @dev Set a distinct URI (RFC 3986) for a given NFT ID.\n   * @notice This is an internal function which should be called from user-implemented external\n   * function. Its purpose is to show and properly initialize data structures when using this\n   * implementation.\n   * @param _tokenId Id for which we want uri.\n   * @param _uri String representing RFC 3986 URI.\n   */\n  function _setTokenUri(\n    uint256 _tokenId,\n    string memory _uri\n  )\n    internal\n    validNFToken(_tokenId)\n  {\n    idToUri[_tokenId] = _uri;\n  }\n\n}\n",
  "sourcePath": "/truffle/contracts/NFTokenMetadata.sol",
  "ast": {
    "absolutePath": "/truffle/contracts/NFTokenMetadata.sol",
    "exportedSymbols": {
      "NFTokenMetadata": [3327]
    },
    "id": 3328,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3166,
        "literals": ["solidity", "0.5", ".8"],
        "nodeType": "PragmaDirective",
        "src": "0:22:12"
      },
      {
        "absolutePath": "/truffle/contracts/NFToken.sol",
        "file": "./NFToken.sol",
        "id": 3167,
        "nodeType": "ImportDirective",
        "scope": 3328,
        "sourceUnit": 3165,
        "src": "24:23:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/truffle/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 3168,
        "nodeType": "ImportDirective",
        "scope": 3328,
        "sourceUnit": 220,
        "src": "48:30:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3169,
              "name": "NFToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3164,
              "src": "1300:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFToken_$3164",
                "typeString": "contract NFToken"
              }
            },
            "id": 3170,
            "nodeType": "InheritanceSpecifier",
            "src": "1300:7:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3171,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 219,
              "src": "1311:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$219",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 3172,
            "nodeType": "InheritanceSpecifier",
            "src": "1311:14:12"
          }
        ],
        "contractDependencies": [30, 199, 219, 3164, 6577],
        "contractKind": "contract",
        "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.\nThe MIT License\nCopyright (c) 2017-2018 0xcert, d.o.o. https://0xcert.org\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
        "fullyImplemented": true,
        "id": 3327,
        "linearizedBaseContracts": [3327, 219, 3164, 6577, 30, 199],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3174,
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 3327,
            "src": "1398:23:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3173,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1398:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3176,
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 3327,
            "src": "1482:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3175,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1482:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3180,
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 3327,
            "src": "1571:44:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 3179,
              "keyType": {
                "id": 3177,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1580:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1571:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 3178,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1591:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3197,
              "nodeType": "Block",
              "src": "1779:114:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3183,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3174,
                      "src": "1785:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4559546f6b656e",
                      "id": 3184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1795:9:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e136a6a04c7e070c4c7a6f35e439a66c8c1f2933fb6e1ccf6ffa984a0090d8e5",
                        "typeString": "literal_string \"EYToken\""
                      },
                      "value": "EYToken"
                    },
                    "src": "1785:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3186,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:19:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3187,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3176,
                      "src": "1810:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "455954",
                      "id": 3188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1821:5:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_fba6223423ec6767a6ca84439947bf1dd5d4914991e381d0f5cf7dbf4ec12220",
                        "typeString": "literal_string \"EYT\""
                      },
                      "value": "EYT"
                    },
                    "src": "1810:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3190,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3191,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6554,
                        "src": "1832:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 3193,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783562356531333966",
                        "id": 3192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:10:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1832:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1866:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1832:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3196,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:38:12"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
            "id": 3198,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1763:2:12"
            },
            "returnParameters": {
              "id": 3182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:0:12"
            },
            "scope": 3327,
            "src": "1752:141:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3207,
              "nodeType": "Block",
              "src": "2082:26:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3203,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3201,
                      "src": "2088:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3204,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3174,
                      "src": "2096:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2088:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3206,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:15:12"
                }
              ]
            },
            "documentation": "@dev Returns a descriptive name for a collection of NFTokens.\n@return Representing name.",
            "id": 3208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2021:2:12"
            },
            "returnParameters": {
              "id": 3202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3201,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "2059:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3200,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2059:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2058:21:12"
            },
            "scope": 3327,
            "src": "2008:100:12",
            "stateMutability": "view",
            "superFunction": 206,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3217,
              "nodeType": "Block",
              "src": "2288:30:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3213,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3211,
                      "src": "2294:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3214,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3176,
                      "src": "2304:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2294:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3216,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:19:12"
                }
              ]
            },
            "documentation": "@dev Returns an abbreviated name for NFTokens.\n@return Representing symbol.",
            "id": 3218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2225:2:12"
            },
            "returnParameters": {
              "id": 3212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3211,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3218,
                  "src": "2263:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2262:23:12"
            },
            "scope": 3327,
            "src": "2210:108:12",
            "stateMutability": "view",
            "superFunction": 211,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3232,
              "nodeType": "Block",
              "src": "2587:35:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3228,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3180,
                      "src": "2600:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 3230,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3229,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3220,
                      "src": "2608:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2600:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3227,
                  "id": 3231,
                  "nodeType": "Return",
                  "src": "2593:24:12"
                }
              ]
            },
            "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.\n@return URI of _tokenId.",
            "id": 3233,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3223,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3220,
                    "src": "2547:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3222,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2671,
                  "src": "2534:12:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2534:22:12"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3220,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3233,
                  "src": "2487:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2481:26:12"
            },
            "returnParameters": {
              "id": 3227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3226,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3233,
                  "src": "2570:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3225,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2569:15:12"
            },
            "scope": 3327,
            "src": "2464:158:12",
            "stateMutability": "view",
            "superFunction": 218,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3262,
              "nodeType": "Block",
              "src": "2953:121:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3243,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7908,
                          "src": "2971:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2971:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3245,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3235,
                        "src": "2983:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3240,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7967,
                        "src": "2959:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadata_$3327",
                          "typeString": "contract super NFTokenMetadata"
                        }
                      },
                      "id": 3242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2966,
                      "src": "2959:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2959:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3247,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:33:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3249,
                            "name": "_uri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "3008:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 3248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3002:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 3250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3002:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 3251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3002:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3024:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3002:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3261,
                  "nodeType": "IfStatement",
                  "src": "2998:72:12",
                  "trueBody": {
                    "id": 3260,
                    "nodeType": "Block",
                    "src": "3031:39:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3254,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3180,
                              "src": "3039:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 3256,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3255,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3235,
                              "src": "3047:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3039:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3257,
                            "name": "_uri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "3059:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "src": "3039:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 3259,
                        "nodeType": "ExpressionStatement",
                        "src": "3039:24:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "added by Chaitanya-Konda\n@dev Mints a new NFT.\n@notice This function calls the internal _mint function.\n@param _tokenId of the NFT to be minted by the msg.sender.\n@param _uri String representing RFC 3986 URI.",
            "id": 3263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3235,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3263,
                  "src": "2891:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3237,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 3263,
                  "src": "2913:20:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3236,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2913:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2885:52:12"
            },
            "returnParameters": {
              "id": 3239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2953:0:12"
            },
            "scope": 3327,
            "src": "2872:202:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3281,
              "nodeType": "Block",
              "src": "3399:74:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3269,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7908,
                            "src": "3413:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3413:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3271,
                            "name": "idToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "3427:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 3273,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3272,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3265,
                            "src": "3437:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3427:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3413:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [7911, 7912],
                      "referencedDeclaration": 7911,
                      "src": "3405:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3405:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "3405:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3278,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3265,
                        "src": "3459:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3277,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3309],
                      "referencedDeclaration": 3309,
                      "src": "3453:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3280,
                  "nodeType": "ExpressionStatement",
                  "src": "3453:15:12"
                }
              ]
            },
            "documentation": "added by Chaitanya-Konda\n@dev Burns a NFT.\n@notice This function calls the internal _burn function. Also, note that this burn implementation allows the minter to re-mint a burned\nNFT.\n@param _tokenId ID of the NFT to be burned.",
            "id": 3282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3265,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "3363:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3357:26:12"
            },
            "returnParameters": {
              "id": 3267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3399:0:12"
            },
            "scope": 3327,
            "src": "3344:129:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3308,
              "nodeType": "Block",
              "src": "3923:123:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3290,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "3941:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3287,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7967,
                        "src": "3929:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadata_$3327",
                          "typeString": "contract super NFTokenMetadata"
                        }
                      },
                      "id": 3289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2998,
                      "src": "3929:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3929:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3292,
                  "nodeType": "ExpressionStatement",
                  "src": "3929:21:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3294,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3180,
                              "src": "3967:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 3296,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3295,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3284,
                              "src": "3975:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3967:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 3293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3961:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 3297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3961:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 3298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3961:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3996:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3961:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3307,
                  "nodeType": "IfStatement",
                  "src": "3957:85:12",
                  "trueBody": {
                    "id": 3306,
                    "nodeType": "Block",
                    "src": "4003:39:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4011:24:12",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3301,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3180,
                              "src": "4018:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 3303,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3302,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3284,
                              "src": "4026:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4018:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3305,
                        "nodeType": "ExpressionStatement",
                        "src": "4011:24:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns a NFT.\n@notice This is an internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation. Also, note that this burn implementation allows the minter to re-mint a burned\nNFT.\n@param _tokenId ID of the NFT to be burned.",
            "id": 3309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3284,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3309,
                  "src": "3887:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3887:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3881:26:12"
            },
            "returnParameters": {
              "id": 3286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3923:0:12"
            },
            "scope": 3327,
            "src": "3867:179:12",
            "stateMutability": "nonpayable",
            "superFunction": 2998,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3325,
              "nodeType": "Block",
              "src": "4545:35:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3319,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3180,
                        "src": "4551:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 3321,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3320,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3311,
                        "src": "4559:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4551:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3322,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3313,
                      "src": "4571:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4551:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3324,
                  "nodeType": "ExpressionStatement",
                  "src": "4551:24:12"
                }
              ]
            },
            "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice This is an internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
            "id": 3326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3316,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3311,
                    "src": "4533:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3317,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3315,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2671,
                  "src": "4520:12:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4520:22:12"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3311,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3326,
                  "src": "4458:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4458:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3313,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 3326,
                  "src": "4480:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3312,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4480:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4452:50:12"
            },
            "returnParameters": {
              "id": 3318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4545:0:12"
            },
            "scope": 3327,
            "src": "4431:149:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 3328,
        "src": "1270:3313:12"
      }
    ],
    "src": "0:4584:12"
  },
  "legacyAST": {
    "absolutePath": "/truffle/contracts/NFTokenMetadata.sol",
    "exportedSymbols": {
      "NFTokenMetadata": [3327]
    },
    "id": 3328,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3166,
        "literals": ["solidity", "0.5", ".8"],
        "nodeType": "PragmaDirective",
        "src": "0:22:12"
      },
      {
        "absolutePath": "/truffle/contracts/NFToken.sol",
        "file": "./NFToken.sol",
        "id": 3167,
        "nodeType": "ImportDirective",
        "scope": 3328,
        "sourceUnit": 3165,
        "src": "24:23:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/truffle/contracts/ERC721Metadata.sol",
        "file": "./ERC721Metadata.sol",
        "id": 3168,
        "nodeType": "ImportDirective",
        "scope": 3328,
        "sourceUnit": 220,
        "src": "48:30:12",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3169,
              "name": "NFToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3164,
              "src": "1300:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NFToken_$3164",
                "typeString": "contract NFToken"
              }
            },
            "id": 3170,
            "nodeType": "InheritanceSpecifier",
            "src": "1300:7:12"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3171,
              "name": "ERC721Metadata",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 219,
              "src": "1311:14:12",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC721Metadata_$219",
                "typeString": "contract ERC721Metadata"
              }
            },
            "id": 3172,
            "nodeType": "InheritanceSpecifier",
            "src": "1311:14:12"
          }
        ],
        "contractDependencies": [30, 199, 219, 3164, 6577],
        "contractKind": "contract",
        "documentation": "@dev Optional metadata implementation for ERC-721 non-fungible token standard.\nThe MIT License\nCopyright (c) 2017-2018 0xcert, d.o.o. https://0xcert.org\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
        "fullyImplemented": true,
        "id": 3327,
        "linearizedBaseContracts": [3327, 219, 3164, 6577, 30, 199],
        "name": "NFTokenMetadata",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3174,
            "name": "nftName",
            "nodeType": "VariableDeclaration",
            "scope": 3327,
            "src": "1398:23:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3173,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1398:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3176,
            "name": "nftSymbol",
            "nodeType": "VariableDeclaration",
            "scope": 3327,
            "src": "1482:25:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 3175,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1482:6:12",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3180,
            "name": "idToUri",
            "nodeType": "VariableDeclaration",
            "scope": 3327,
            "src": "1571:44:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 3179,
              "keyType": {
                "id": 3177,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1580:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1571:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 3178,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "1591:6:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3197,
              "nodeType": "Block",
              "src": "1779:114:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3183,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3174,
                      "src": "1785:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "4559546f6b656e",
                      "id": 3184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1795:9:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_e136a6a04c7e070c4c7a6f35e439a66c8c1f2933fb6e1ccf6ffa984a0090d8e5",
                        "typeString": "literal_string \"EYToken\""
                      },
                      "value": "EYToken"
                    },
                    "src": "1785:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3186,
                  "nodeType": "ExpressionStatement",
                  "src": "1785:19:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3187,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3176,
                      "src": "1810:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "455954",
                      "id": 3188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1821:5:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_fba6223423ec6767a6ca84439947bf1dd5d4914991e381d0f5cf7dbf4ec12220",
                        "typeString": "literal_string \"EYT\""
                      },
                      "value": "EYT"
                    },
                    "src": "1810:16:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3190,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:16:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3191,
                        "name": "supportedInterfaces",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6554,
                        "src": "1832:19:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
                          "typeString": "mapping(bytes4 => bool)"
                        }
                      },
                      "id": 3193,
                      "indexExpression": {
                        "argumentTypes": null,
                        "hexValue": "30783562356531333966",
                        "id": 3192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:10:12",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1832:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 3194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1866:4:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1832:38:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3196,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:38:12"
                }
              ]
            },
            "documentation": "@dev Contract constructor.\n@notice When implementing this contract don't forget to set nftName and nftSymbol.",
            "id": 3198,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3181,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1763:2:12"
            },
            "returnParameters": {
              "id": 3182,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1779:0:12"
            },
            "scope": 3327,
            "src": "1752:141:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3207,
              "nodeType": "Block",
              "src": "2082:26:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3203,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3201,
                      "src": "2088:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3204,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3174,
                      "src": "2096:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2088:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3206,
                  "nodeType": "ExpressionStatement",
                  "src": "2088:15:12"
                }
              ]
            },
            "documentation": "@dev Returns a descriptive name for a collection of NFTokens.\n@return Representing name.",
            "id": 3208,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "name",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3199,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2021:2:12"
            },
            "returnParameters": {
              "id": 3202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3201,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 3208,
                  "src": "2059:19:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3200,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2059:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2058:21:12"
            },
            "scope": 3327,
            "src": "2008:100:12",
            "stateMutability": "view",
            "superFunction": 206,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3217,
              "nodeType": "Block",
              "src": "2288:30:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3213,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3211,
                      "src": "2294:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3214,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3176,
                      "src": "2304:9:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "src": "2294:19:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 3216,
                  "nodeType": "ExpressionStatement",
                  "src": "2294:19:12"
                }
              ]
            },
            "documentation": "@dev Returns an abbreviated name for NFTokens.\n@return Representing symbol.",
            "id": 3218,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "symbol",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2225:2:12"
            },
            "returnParameters": {
              "id": 3212,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3211,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 3218,
                  "src": "2263:21:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3210,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2263:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2262:23:12"
            },
            "scope": 3327,
            "src": "2210:108:12",
            "stateMutability": "view",
            "superFunction": 211,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3232,
              "nodeType": "Block",
              "src": "2587:35:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 3228,
                      "name": "idToUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3180,
                      "src": "2600:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 3230,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 3229,
                      "name": "_tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3220,
                      "src": "2608:8:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2600:17:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 3227,
                  "id": 3231,
                  "nodeType": "Return",
                  "src": "2593:24:12"
                }
              ]
            },
            "documentation": "@dev A distinct URI (RFC 3986) for a given NFT.\n@param _tokenId Id for which we want uri.\n@return URI of _tokenId.",
            "id": 3233,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3223,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3220,
                    "src": "2547:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3224,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3222,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2671,
                  "src": "2534:12:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2534:22:12"
              }
            ],
            "name": "tokenURI",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3221,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3220,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3233,
                  "src": "2487:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3219,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2487:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2481:26:12"
            },
            "returnParameters": {
              "id": 3227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3226,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 3233,
                  "src": "2570:13:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3225,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2570:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2569:15:12"
            },
            "scope": 3327,
            "src": "2464:158:12",
            "stateMutability": "view",
            "superFunction": 218,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3262,
              "nodeType": "Block",
              "src": "2953:121:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 3243,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7908,
                          "src": "2971:3:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2971:10:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3245,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3235,
                        "src": "2983:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3240,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7967,
                        "src": "2959:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadata_$3327",
                          "typeString": "contract super NFTokenMetadata"
                        }
                      },
                      "id": 3242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2966,
                      "src": "2959:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2959:33:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3247,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:33:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 3249,
                            "name": "_uri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "3008:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 3248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3002:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 3250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3002:11:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 3251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3002:18:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3024:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3002:23:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3261,
                  "nodeType": "IfStatement",
                  "src": "2998:72:12",
                  "trueBody": {
                    "id": 3260,
                    "nodeType": "Block",
                    "src": "3031:39:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3254,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3180,
                              "src": "3039:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 3256,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3255,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3235,
                              "src": "3047:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3039:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 3257,
                            "name": "_uri",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3237,
                            "src": "3059:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          },
                          "src": "3039:24:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 3259,
                        "nodeType": "ExpressionStatement",
                        "src": "3039:24:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "added by Chaitanya-Konda\n@dev Mints a new NFT.\n@notice This function calls the internal _mint function.\n@param _tokenId of the NFT to be minted by the msg.sender.\n@param _uri String representing RFC 3986 URI.",
            "id": 3263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3235,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3263,
                  "src": "2891:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3234,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2891:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3237,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 3263,
                  "src": "2913:20:12",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3236,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2913:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2885:52:12"
            },
            "returnParameters": {
              "id": 3239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2953:0:12"
            },
            "scope": 3327,
            "src": "2872:202:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3281,
              "nodeType": "Block",
              "src": "3399:74:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3274,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3269,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7908,
                            "src": "3413:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3413:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 3271,
                            "name": "idToOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2558,
                            "src": "3427:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 3273,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 3272,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3265,
                            "src": "3437:8:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3427:19:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3413:33:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3268,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [7911, 7912],
                      "referencedDeclaration": 7911,
                      "src": "3405:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3405:42:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3276,
                  "nodeType": "ExpressionStatement",
                  "src": "3405:42:12"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3278,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3265,
                        "src": "3459:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3277,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [3309],
                      "referencedDeclaration": 3309,
                      "src": "3453:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3453:15:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3280,
                  "nodeType": "ExpressionStatement",
                  "src": "3453:15:12"
                }
              ]
            },
            "documentation": "added by Chaitanya-Konda\n@dev Burns a NFT.\n@notice This function calls the internal _burn function. Also, note that this burn implementation allows the minter to re-mint a burned\nNFT.\n@param _tokenId ID of the NFT to be burned.",
            "id": 3282,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3265,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3282,
                  "src": "3363:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3264,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3363:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3357:26:12"
            },
            "returnParameters": {
              "id": 3267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3399:0:12"
            },
            "scope": 3327,
            "src": "3344:129:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3308,
              "nodeType": "Block",
              "src": "3923:123:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3290,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3284,
                        "src": "3941:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 3287,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7967,
                        "src": "3929:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_NFTokenMetadata_$3327",
                          "typeString": "contract super NFTokenMetadata"
                        }
                      },
                      "id": 3289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2998,
                      "src": "3929:11:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3929:21:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3292,
                  "nodeType": "ExpressionStatement",
                  "src": "3929:21:12"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 3300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3294,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3180,
                              "src": "3967:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 3296,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3295,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3284,
                              "src": "3975:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3967:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 3293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3961:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": "bytes"
                        },
                        "id": 3297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3961:24:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 3298,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "3961:31:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 3299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3996:1:12",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3961:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 3307,
                  "nodeType": "IfStatement",
                  "src": "3957:85:12",
                  "trueBody": {
                    "id": 3306,
                    "nodeType": "Block",
                    "src": "4003:39:12",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 3304,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4011:24:12",
                          "subExpression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 3301,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3180,
                              "src": "4018:7:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 3303,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 3302,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3284,
                              "src": "4026:8:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4018:17:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3305,
                        "nodeType": "ExpressionStatement",
                        "src": "4011:24:12"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": "@dev Burns a NFT.\n@notice This is an internal function which should be called from user-implemented external\nburn function. Its purpose is to show and properly initialize data structures when using this\nimplementation. Also, note that this burn implementation allows the minter to re-mint a burned\nNFT.\n@param _tokenId ID of the NFT to be burned.",
            "id": 3309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3284,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3309,
                  "src": "3887:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3887:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3881:26:12"
            },
            "returnParameters": {
              "id": 3286,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3923:0:12"
            },
            "scope": 3327,
            "src": "3867:179:12",
            "stateMutability": "nonpayable",
            "superFunction": 2998,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3325,
              "nodeType": "Block",
              "src": "4545:35:12",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 3319,
                        "name": "idToUri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3180,
                        "src": "4551:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 3321,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 3320,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3311,
                        "src": "4559:8:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4551:17:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3322,
                      "name": "_uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3313,
                      "src": "4571:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4551:24:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 3324,
                  "nodeType": "ExpressionStatement",
                  "src": "4551:24:12"
                }
              ]
            },
            "documentation": "@dev Set a distinct URI (RFC 3986) for a given NFT ID.\n@notice This is an internal function which should be called from user-implemented external\nfunction. Its purpose is to show and properly initialize data structures when using this\nimplementation.\n@param _tokenId Id for which we want uri.\n@param _uri String representing RFC 3986 URI.",
            "id": 3326,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 3316,
                    "name": "_tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3311,
                    "src": "4533:8:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3317,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3315,
                  "name": "validNFToken",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2671,
                  "src": "4520:12:12",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4520:22:12"
              }
            ],
            "name": "_setTokenUri",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3311,
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 3326,
                  "src": "4458:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4458:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3313,
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 3326,
                  "src": "4480:18:12",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3312,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4480:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4452:50:12"
            },
            "returnParameters": {
              "id": 3318,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4545:0:12"
            },
            "scope": 3327,
            "src": "4431:149:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 3328,
        "src": "1270:3313:12"
      }
    ],
    "src": "0:4584:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.8+commit.23d335f2.Emscripten.clang"
  },
  "networks": {
    "1566929057569": {
      "events": {},
      "links": {},
      "address": "0x70eeb2b2fE77D0D298BaED770395F873A8311420",
      "transactionHash": "0xaf3047aa846375a464dde6ba4a75b2a3f0b012ec8af235f21ff0424edbfae561"
    },
    "1566934826983": {
      "events": {},
      "links": {},
      "address": "0x462078639336b43FE06A2Be43ce5f69E00723fB1",
      "transactionHash": "0x6ac83a769553a8c269aa7c3ed5d739e55ba6426d5aedd934a9fb01d54ed9ef7a"
    },
    "1566935484337": {
      "events": {},
      "links": {},
      "address": "0xDa369546A04F0cE4fD27668DFC166D1348965001",
      "transactionHash": "0x14bed932e3d7fbb9eb9ecc0d3847d3226db8a0522c1e5065b190dde0b2ff5470"
    },
    "1566935814149": {
      "events": {},
      "links": {},
      "address": "0x5dA4cA8853441E3A9364DaAf855259a01fb472f1",
      "transactionHash": "0xdeb2df978be3fad91bddc7395cab28e2a3269c41535bfd17b804764900856c2c"
    },
    "1566936079615": {
      "events": {},
      "links": {},
      "address": "0xb6B62C8C2B0E785f52Edee431d770B5B722b670c",
      "transactionHash": "0x2bdb7d11b9579c0b1c85bd1defee9f3e22a37d77dad7809091d7c8a17afec7a9"
    },
    "1566936573515": {
      "events": {},
      "links": {},
      "address": "0xC3270e05977F5489f55A554Ab786da06C929D2cc",
      "transactionHash": "0x3295b155625e185f3a87b79f48dfa43dc855c83483e8c68c2be100968840cf77"
    },
    "1566937911318": {
      "events": {},
      "links": {},
      "address": "0xfC6e267Ad36C0d5B14cfF49481Ddf9fd8A932431",
      "transactionHash": "0x58729646fdc1e1d80745accd301d56f5a0e02b1e54e4a23cdc52f428c86c7413"
    },
    "1566938201017": {
      "events": {},
      "links": {},
      "address": "0x351E41f82fa76d924b9Bdb01a4b283A4A065B19d",
      "transactionHash": "0x37f414bd1f185855caed6f73eacbbece15f1efc4094a40a6e057ca938f853856"
    },
    "1566938467743": {
      "events": {},
      "links": {},
      "address": "0xbA08A2f1B474f6a8c22199273c467b34A774Dcba",
      "transactionHash": "0x916aef1d280c4501b8a77877fd9a2a5c80cdda41c6cfd4b68021ce1773e8cb56"
    },
    "1566938679960": {
      "events": {},
      "links": {},
      "address": "0xF076A519259FBd1d70337921620d48d21a133f8B",
      "transactionHash": "0x6591f021c03f6b0be5bd975c78d509e4a2559bb946604891ef5377f92b634196"
    },
    "1566938819073": {
      "events": {},
      "links": {},
      "address": "0x592693913d021C3944f3Ccd11876c63ff568d95a",
      "transactionHash": "0x9774224b74a08b2faf51f989380a176a1d33596eb0fac5847c9be7e6a79d06be"
    },
    "1566940394509": {
      "events": {},
      "links": {},
      "address": "0x6e350DfD96207491Bd334E7284EAfE1d40cE89d5",
      "transactionHash": "0xf20e21585f60e6568661a943095b8eaffadafd2db1a3065bfe52682aa1c42777"
    },
    "1568908389367": {
      "events": {},
      "links": {},
      "address": "0xF4A6Af2dcF3AE69c0A8FA650b96D1fe445dAd37D",
      "transactionHash": "0x41c09e35173d232079da687283e2b0de422dd42dcae18116bac70191913b648f"
    },
    "1568927521474": {
      "events": {},
      "links": {},
      "address": "0x3B5ABda20804274b494a413aBd5E952C6cEd29aD",
      "transactionHash": "0x0826bd9f96213de642df1614d4c7f6225c1f7d092bf06ab249301f10bf250561"
    },
    "1568988356522": {
      "events": {},
      "links": {},
      "address": "0x6f6bd2728A682f575E2fADf3137F8De0E35B7562",
      "transactionHash": "0xf92d80b4d6a95a2b3beab23d1c50337b2e1b61e66c78cfd588dcf02887b5526a"
    },
    "1568990755529": {
      "events": {},
      "links": {},
      "address": "0xB2FFB21cB9e67474bD9f0b7f415155C96e12B7c7",
      "transactionHash": "0xec0354100c979d01a3a7b3c27226d2c16a8a8f355a308093c7fc8f38741204e1"
    },
    "1569005860207": {
      "events": {},
      "links": {},
      "address": "0x0D7b1886F2fE6C8b9eb162cD5255C27f59dBc537",
      "transactionHash": "0xe3f0ff7fa357347efcd861b8b622f43d9f33abdbc5cf4f8b53ed23adc358d8e2"
    },
    "1569267790449": {
      "events": {},
      "links": {},
      "address": "0x167d4E00512Cb6be4e2F8C886CbAfA0c4d20B274",
      "transactionHash": "0xeb9691ee2d54f0ebaf285daf117eeb943047b0ccac1837e3fe95d71a629d122f"
    },
    "1569267985257": {
      "events": {},
      "links": {},
      "address": "0x5200D092B315df30d63105153f088F97d92A5e6f",
      "transactionHash": "0x35febe560b4b52a0499f5f7181219e4b8270114562d0bc918ed9447e68613a84"
    },
    "1569334574237": {
      "events": {},
      "links": {},
      "address": "0xD8Fe81ed032C1a3C4804D77Ec463C9229a23F8dA",
      "transactionHash": "0xc703103cb953dea9d5bd355f815a46e98c7250aa311cacccfdc0cfd4ba2df79e"
    },
    "1569334742514": {
      "events": {},
      "links": {},
      "address": "0x1b9b01aD15cAEC63C6536f5cc7d74e2D91e1bA53",
      "transactionHash": "0x25d3864003022cbdc6adc8706ed37e3aebdc64df02c3857c929581fb2cd16cb7"
    },
    "1569335006564": {
      "events": {},
      "links": {},
      "address": "0x9860F3D3b5A44c639a017344234Fc2209c2d2BBA",
      "transactionHash": "0xf14ade9ab4ea94e556d4195640e6dd347a7984b642044018c9750f84663fa072"
    },
    "1569337024669": {
      "events": {},
      "links": {},
      "address": "0x8BA337359C7d0e8dCBd01e5f6e21387eD0B2F04f",
      "transactionHash": "0x03537f051b35e8b41aea38d4dbfe8b411ca53b031615bb4c935c8b96241f7547"
    },
    "1569337509457": {
      "events": {},
      "links": {},
      "address": "0x0a979fCe33B43B26593Ba6Dec7Cc22d1b5a98CA2",
      "transactionHash": "0x2821d2f5436f05b53228a1ab476d274b2c2b90042987c488ecb7705267c65e24"
    },
    "1569337999831": {
      "events": {},
      "links": {},
      "address": "0x774b00F55f9Cea4F6c21dF58Fc9CC1Ea6775FBd7",
      "transactionHash": "0xfb4da659e781eda223e3bcb80e5cb64047eac028cf60f8146c94fb3dd38509c5"
    },
    "1569338704720": {
      "events": {},
      "links": {},
      "address": "0xb0D0A8412cd08acc4d19bD52d03FDAc2809CccBb",
      "transactionHash": "0x2bdcb433ef92c395b8bdd030dd5e720b7bccd3b60a66f0af41491515c87bb48f"
    },
    "1569344730025": {
      "events": {},
      "links": {},
      "address": "0x883df37E8e8AdfCc6D1e397616b721ee2fAC5Bf8",
      "transactionHash": "0xefa9291dcc9e00fe122d9d11f96f138a6d8835923b0d158332f200426743addb"
    },
    "1569346354618": {
      "events": {},
      "links": {},
      "address": "0xAf644f066E31a19312d676db6a5a9bCE2764F77e",
      "transactionHash": "0x47d6a1abaf08fea482bda89022176ac5c90875e6a270db74f83976564ee752f0"
    },
    "1569347151610": {
      "events": {},
      "links": {},
      "address": "0x091668F3C77182078A2D1259e903217952Bca29F",
      "transactionHash": "0x03a0f9aa4d5b01ab1db72751b0448d3932ee006fc907c47bc18cf510b0bb3e6c"
    },
    "1569347324909": {
      "events": {},
      "links": {},
      "address": "0xEe4593c6e6990e99e6e48e6Cea5CE7398791021f",
      "transactionHash": "0x27365b552d76b212a03bdda665951ef1d7837bc7f0cd2e0e40317a22c0c9b821"
    },
    "1569348909989": {
      "events": {},
      "links": {},
      "address": "0x98D75F5591aB5FbE6b9A6DE987374371B3EC6bA3",
      "transactionHash": "0x5365819bf8b9d4d2793fb2f0791d5e43c5eb59eb55a956471c95fe2733cbee02"
    },
    "1569349366113": {
      "events": {},
      "links": {},
      "address": "0x0d977b36fca891cC0A362778CFeBe59Df3fD16b5",
      "transactionHash": "0xd759ddb34bd7989f27bc4bab927f25332c5d7c307f861775e05d07143c8cec97"
    }
  },
  "schemaVersion": "3.0.5",
  "updatedAt": "2019-09-24T18:22:55.935Z",
  "devdoc": {
    "details": "Optional metadata implementation for ERC-721 non-fungible token standard. The MIT License Copyright (c) 2017-2018 0xcert, d.o.o. https://0xcert.org Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "return": "Balance of _owner."
      },
      "burn(uint256)": {
        "details": "Burns a NFT.",
        "params": {
          "_tokenId": "ID of the NFT to be burned."
        }
      },
      "constructor": {
        "details": "Contract constructor."
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "return": "Address that _tokenId is approved for."
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "return": "True if approved for all, false otherwise."
      },
      "mint(uint256,string)": {
        "details": "Mints a new NFT.",
        "params": {
          "_tokenId": "of the NFT to be minted by the msg.sender.",
          "_uri": "String representing RFC 3986 URI."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "return": "Representing name."
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "return": "Address of _tokenId owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "return": "True if _interfaceID is supported, false otherwise."
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "return": "Representing symbol."
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "return": "URI of _tokenId."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "burn(uint256)": {
        "notice": "added by Chaitanya-KondaThis function calls the internal _burn function. Also, note that this burn implementation allows the minter to re-mint a burned NFT."
      },
      "constructor": "When implementing this contract don't forget to set nftName and nftSymbol.",
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "mint(uint256,string)": {
        "notice": "added by Chaitanya-KondaThis function calls the internal _mint function."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\""
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they maybe be permanently lost."
      }
    }
  }
}
